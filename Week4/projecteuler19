{
 "metadata": {
  "name": "projecteuler19"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Counting Sundays\n",
      "=\n",
      "Problem 19\n",
      "-\n",
      "You are given the following information, but you may prefer to do some research for yourself.\n",
      "\n",
      "1 Jan 1900 was a Monday.\n",
      "\n",
      "Thirty days has September,\n",
      "\n",
      "April, June and November.\n",
      "\n",
      "All the rest have thirty-one,\n",
      "\n",
      "Saving February alone,\n",
      "\n",
      "Which has twenty-eight, rain or shine.\n",
      "\n",
      "And on leap years, twenty-nine.\n",
      "\n",
      "A leap year occurs on any year evenly divisible by 4, but not on a century unless it is divisible by 400.\n",
      "\n",
      "How many Sundays fell on the first of the month during the twentieth century (1 Jan 1901 to 31 Dec 2000)?"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def day():\n",
      "    days = [[0,0,0]]\n",
      "    for year in range(1900, 2001):\n",
      "        for month in range(1, 13):\n",
      "            if month in [4, 6, 9, 11]:\n",
      "                numdays = 30\n",
      "            elif not month - 2:\n",
      "                if year % 4 == 0:\n",
      "                        numdays = 29\n",
      "                else:\n",
      "                    numdays = 28\n",
      "            else:\n",
      "                numdays = 31\n",
      "            for day in range(1, numdays + 1):\n",
      "                day.append([month, day, year])\n",
      "    return days\n",
      "\n",
      "def sundays():\n",
      "    days = day()\n",
      "    sundays = []\n",
      "    for day in range(len(dayList)):\n",
      "        if not (day - 6) % 7 and days[day][0] > 1900 and not days[day][2] - 1:\n",
      "            sundays.append(days[day])\n",
      "    return len(sundayList)\n",
      "\n",
      "print(sundayList())"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "171\n"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 14
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}